"use client";

import type React from "react";
import { useState } from "react";
import {
  View,
  Text,
  Image,
  StyleSheet,
  ScrollView,
  TouchableOpacity,
  Dimensions,
  SafeAreaView,
} from "react-native";
import {
  Heart,
  Activity,
  Wind,
  Stethoscope,
  TestTube,
  ShieldCheck,
  ChevronDown,
  ChevronUp,
  AlertTriangle,
} from "lucide-react-native";

const { width } = Dimensions.get("window");

// English text content
const englishText = {
  bannerTagline:
    "A healthy lifestyle is the best way to prevent heart disease! ЁЯЪ┤тАНтЩВя╕ПЁЯеЧЁЯЪн",
  aboutTitle: "ABOUT CORONARY ARTERY DISEASE",
  aboutContent:
    "Coronary Artery Disease (CAD) is a heart condition where the blood vessels that supply oxygen to the heart (coronary arteries) become narrow or blocked because of a buildup of fat, cholesterol, and other substances, forming plaques. When the arteries become too narrow, the heart doesn't get enough oxygen-rich blood, leading to chest pain (angina), shortness of breath, or even a heart attack.",
  causesTitle: "WHAT CAUSES CAD?",
  causes: {
    unhealthyDiet: {
      name: "Unhealthy Diet",
      description: "Too much fatty, fried, or processed food",
    },
    smoking: {
      name: "Smoking",
      description: "Damages blood vessels",
    },
    lackOfExercise: {
      name: "Lack of Exercise",
      description: "Leads to weight gain and heart strain",
    },
    highBloodPressure: {
      name: "High Blood Pressure",
      description: "Increases stress on arteries",
    },
    highCholesterol: {
      name: "High Cholesterol",
      description: "Leads to plaque buildup",
    },
    stress: {
      name: "Stress",
      description: "Can contribute to high blood pressure",
    },
    familyHistory: {
      name: "Family History",
      description: "Higher risk if relatives had heart disease",
    },
  },
  symptomsTitle: "COMMON SYMPTOMS OF CAD",
  symptoms: {
    chestPain: {
      name: "Chest pain (Angina)",
      description:
        "A tight, squeezing, or burning feeling in the chest, especially during activity or stress.",
    },
    shortnessOfBreath: {
      name: "Shortness of Breath",
      description: "Feeling breathless even with light activity.",
    },
    heartAttackSigns: {
      name: "Heart Attack Signs",
      description:
        "Severe chest pain, sweating, nausea, dizziness, and pain in the left arm, jaw, or back.",
    },
  },
  diagnosisTitle: "HOW IS CAD DIAGNOSED?",
  diagnosis: {
    ecg: {
      name: "ECG (Electrocardiogram)",
      description: "Checks heart rhythm.",
    },
    bloodTests: {
      name: "Blood Tests",
      description: "Look for signs of heart damage.",
    },
    stressTest: {
      name: "Stress Test",
      description: "Measures how the heart works under activity.",
    },
    angiography: {
      name: "Angiography",
      description: "Special X-ray to see blockages in heart arteries.",
    },
  },
  treatmentTitle: "TREATMENT",
  treatment: {
    lifestyleChanges: {
      title: "LIFESTYLE CHANGES",
      items: [
        "тАв Eat more fruits, vegetables, and whole grains ЁЯеЧ",
        "тАв Avoid fried and junk foods ЁЯНЯ",
        "тАв Exercise at least 30 minutes a day ЁЯПГтАНтЩВя╕ПЁЯТГ",
        "тАв Quit smoking ЁЯЪн and limit alcohol ЁЯН╖",
        "тАв Manage stress through yoga, meditation, or hobbies ЁЯзШтАНтЩВя╕ПЁЯОи",
      ],
    },
    medications: {
      title: "MEDICATIONS",
      items: [
        "тАв Blood thinners to prevent clots.",
        "тАв Cholesterol-lowering drugs to reduce plaque buildup.",
        "тАв Blood pressure medications to ease the heart's workload.",
        "тАв Nitrates to relieve chest pain.",
      ],
    },
    procedures: {
      title: "MEDICAL PROCEDURES (IF NEEDED)",
      items: [
        "тАв Angioplasty & Stents тАУ Opens blocked arteries.",
        "тАв Bypass Surgery тАУ Creates a new path for blood flow around blocked arteries.",
      ],
    },
  },
  emergencyAlert:
    "If you have chest pain or other symptoms, see a doctor immediately. Early detection saves lives! тЭдя╕П",
  translateButton: "рд╣рд┐рдВрджреА рдореЗрдВ рдЕрдиреБрд╡рд╛рдж рдХрд░реЗрдВ",
};

// Hindi text content
const hindiText = {
  bannerTagline:
    "рд╣реГрджрдп рд░реЛрдЧ рдХреЛ рд░реЛрдХрдиреЗ рдХрд╛ рд╕рдмрд╕реЗ рдЕрдЪреНрдЫрд╛ рддрд░реАрдХрд╛ рд╣реИ рд╕реНрд╡рд╕реНрде рдЬреАрд╡рдирд╢реИрд▓реА! ЁЯЪ┤тАНтЩВя╕ПЁЯеЧЁЯЪн",
  aboutTitle: "рдХреЛрд░реЛрдирд░реА рдЖрд░реНрдЯрд░реА рдбрд┐рдЬреАрдЬ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ",
  aboutContent:
    "рдХреЛрд░реЛрдирд░реА рдЖрд░реНрдЯрд░реА рдбрд┐рдЬреАрдЬ (CAD) рдПрдХ рд╣реГрджрдп рд╕реНрдерд┐рддрд┐ рд╣реИ рдЬрд╣рд╛рдВ рд╣реГрджрдп рдХреЛ рдСрдХреНрд╕реАрдЬрди рдХреА рдЖрдкреВрд░реНрддрд┐ рдХрд░рдиреЗ рд╡рд╛рд▓реА рд░рдХреНрдд рд╡рд╛рд╣рд┐рдХрд╛рдПрдВ (рдХреЛрд░реЛрдирд░реА рдзрдордирд┐рдпрд╛рдВ) рд╡рд╕рд╛, рдХреЛрд▓реЗрд╕реНрдЯреНрд░реЙрд▓ рдФрд░ рдЕрдиреНрдп рдкрджрд╛рд░реНрдереЛрдВ рдХреЗ рдЬрдорд╛ рд╣реЛрдиреЗ рдХреЗ рдХрд╛рд░рдг рд╕рдВрдХреАрд░реНрдг рдпрд╛ рдЕрд╡рд░реБрджреНрдз рд╣реЛ рдЬрд╛рддреА рд╣реИрдВ, рдЬрд┐рд╕рд╕реЗ рдкреНрд▓рд╛рдХ рдмрдирддрд╛ рд╣реИред рдЬрдм рдзрдордирд┐рдпрд╛рдВ рдмрд╣реБрдд рд╕рдВрдХреАрд░реНрдг рд╣реЛ рдЬрд╛рддреА рд╣реИрдВ, рддреЛ рд╣реГрджрдп рдХреЛ рдкрд░реНрдпрд╛рдкреНрдд рдСрдХреНрд╕реАрдЬрди рдпреБрдХреНрдд рд░рдХреНрдд рдирд╣реАрдВ рдорд┐рд▓рддрд╛, рдЬрд┐рд╕рд╕реЗ рдЫрд╛рддреА рдореЗрдВ рджрд░реНрдж (рдПрдВрдЬрд╛рдЗрдирд╛), рд╕рд╛рдВрд╕ рдХреА рддрдХрд▓реАрдл, рдпрд╛ рдпрд╣рд╛рдВ рддрдХ рдХрд┐ рджрд┐рд▓ рдХрд╛ рджреМрд░рд╛ рднреА рдкрдбрд╝ рд╕рдХрддрд╛ рд╣реИред",
  causesTitle: "CAD рдХреЗ рдХрд╛рд░рдг рдХреНрдпрд╛ рд╣реИрдВ?",
  causes: {
    unhealthyDiet: {
      name: "рдЕрд╕реНрд╡рд╛рд╕реНрдереНрдпрдХрд░ рдЖрд╣рд╛рд░",
      description: "рдЕрдзрд┐рдХ рд╡рд╕рд╛рдпреБрдХреНрдд, рддрд▓рд╛ рд╣реБрдЖ, рдпрд╛ рдкреНрд░рд╕рдВрд╕реНрдХреГрдд рдЦрд╛рджреНрдп рдкрджрд╛рд░реНрде",
    },
    smoking: {
      name: "рдзреВрдореНрд░рдкрд╛рди",
      description: "рд░рдХреНрдд рд╡рд╛рд╣рд┐рдХрд╛рдУрдВ рдХреЛ рдиреБрдХрд╕рд╛рди рдкрд╣реБрдВрдЪрд╛рддрд╛ рд╣реИ",
    },
    lackOfExercise: {
      name: "рд╡реНрдпрд╛рдпрд╛рдо рдХреА рдХрдореА",
      description: "рд╡рдЬрди рдмрдврд╝рдиреЗ рдФрд░ рд╣реГрджрдп рдкрд░ рддрдирд╛рд╡ рдХрд╛ рдХрд╛рд░рдг рдмрдирддрд╛ рд╣реИ",
    },
    highBloodPressure: {
      name: "рдЙрдЪреНрдЪ рд░рдХреНрддрдЪрд╛рдк",
      description: "рдзрдордирд┐рдпреЛрдВ рдкрд░ рддрдирд╛рд╡ рдмрдврд╝рд╛рддрд╛ рд╣реИ",
    },
    highCholesterol: {
      name: "рдЙрдЪреНрдЪ рдХреЛрд▓реЗрд╕реНрдЯреНрд░реЙрд▓",
      description: "рдкреНрд▓рд╛рдХ рдХреЗ рдирд┐рд░реНрдорд╛рдг рдХрд╛ рдХрд╛рд░рдг рдмрдирддрд╛ рд╣реИ",
    },
    stress: {
      name: "рддрдирд╛рд╡",
      description: "рдЙрдЪреНрдЪ рд░рдХреНрддрдЪрд╛рдк рдореЗрдВ рдпреЛрдЧрджрд╛рди рдХрд░ рд╕рдХрддрд╛ рд╣реИ",
    },
    familyHistory: {
      name: "рдкрд╛рд░рд┐рд╡рд╛рд░рд┐рдХ рдЗрддрд┐рд╣рд╛рд╕",
      description: "рдЕрдЧрд░ рд░рд┐рд╢реНрддреЗрджрд╛рд░реЛрдВ рдХреЛ рд╣реГрджрдп рд░реЛрдЧ рдерд╛ рддреЛ рдЕрдзрд┐рдХ рдЬреЛрдЦрд┐рдо",
    },
  },
  symptomsTitle: "CAD рдХреЗ рд╕рд╛рдорд╛рдиреНрдп рд▓рдХреНрд╖рдг",
  symptoms: {
    chestPain: {
      name: "рдЫрд╛рддреА рдореЗрдВ рджрд░реНрдж (рдПрдВрдЬрд╛рдЗрдирд╛)",
      description:
        "рдЫрд╛рддреА рдореЗрдВ рдХрд╕рд╛ рд╣реБрдЖ, рдирд┐рдЪреЛрдбрд╝рдиреЗ рд╡рд╛рд▓рд╛, рдпрд╛ рдЬрд▓рди рд╡рд╛рд▓рд╛ рдЕрд╣рд╕рд╛рд╕, рд╡рд┐рд╢реЗрд╖ рд░реВрдк рд╕реЗ рдЧрддрд┐рд╡рд┐рдзрд┐ рдпрд╛ рддрдирд╛рд╡ рдХреЗ рджреМрд░рд╛рдиред",
    },
    shortnessOfBreath: {
      name: "рд╕рд╛рдВрд╕ рдХреА рддрдХрд▓реАрдл",
      description: "рд╣рд▓реНрдХреА рдЧрддрд┐рд╡рд┐рдзрд┐ рдХреЗ рд╕рд╛рде рднреА рд╕рд╛рдВрд╕ рдлреВрд▓рдирд╛ред",
    },
    heartAttackSigns: {
      name: "рджрд┐рд▓ рдХреЗ рджреМрд░реЗ рдХреЗ рд╕рдВрдХреЗрдд",
      description:
        "рдЫрд╛рддреА рдореЗрдВ рддреЗрдЬ рджрд░реНрдж, рдкрд╕реАрдирд╛, рдорддрд▓реА, рдЪрдХреНрдХрд░ рдЖрдирд╛, рдФрд░ рдмрд╛рдПрдВ рд╣рд╛рде, рдЬрдмрдбрд╝реЗ, рдпрд╛ рдкреАрда рдореЗрдВ рджрд░реНрджред",
    },
  },
  diagnosisTitle: "CAD рдХрд╛ рдирд┐рджрд╛рди рдХреИрд╕реЗ рдХрд┐рдпрд╛ рдЬрд╛рддрд╛ рд╣реИ?",
  diagnosis: {
    ecg: {
      name: "рдИрд╕реАрдЬреА (рдЗрд▓реЗрдХреНрдЯреНрд░реЛрдХрд╛рд░реНрдбрд┐рдпреЛрдЧреНрд░рд╛рдо)",
      description: "рд╣реГрджрдп рдХреА рд▓рдп рдХреА рдЬрд╛рдВрдЪ рдХрд░рддрд╛ рд╣реИред",
    },
    bloodTests: {
      name: "рд░рдХреНрдд рдкрд░реАрдХреНрд╖рдг",
      description: "рд╣реГрджрдп рдХреНрд╖рддрд┐ рдХреЗ рд╕рдВрдХреЗрддреЛрдВ рдХреА рддрд▓рд╛рд╢ рдХрд░рддрд╛ рд╣реИред",
    },
    stressTest: {
      name: "рд╕реНрдЯреНрд░реЗрд╕ рдЯреЗрд╕реНрдЯ",
      description: "рдЧрддрд┐рд╡рд┐рдзрд┐ рдХреЗ рджреМрд░рд╛рди рд╣реГрджрдп рдХреИрд╕реЗ рдХрд╛рдо рдХрд░рддрд╛ рд╣реИ, рдЗрд╕рдХрд╛ рдорд╛рдкрди рдХрд░рддрд╛ рд╣реИред",
    },
    angiography: {
      name: "рдПрдВрдЬрд┐рдпреЛрдЧреНрд░рд╛рдлреА",
      description: "рд╣реГрджрдп рдзрдордирд┐рдпреЛрдВ рдореЗрдВ рд░реБрдХрд╛рд╡рдЯреЛрдВ рдХреЛ рджреЗрдЦрдиреЗ рдХреЗ рд▓рд┐рдП рд╡рд┐рд╢реЗрд╖ рдПрдХреНрд╕-рд░реЗред",
    },
  },
  treatmentTitle: "рдЙрдкрдЪрд╛рд░",
  treatment: {
    lifestyleChanges: {
      title: "рдЬреАрд╡рдирд╢реИрд▓реА рдореЗрдВ рдкрд░рд┐рд╡рд░реНрддрди",
      items: [
        "тАв рдЕрдзрд┐рдХ рдлрд▓, рд╕рдмреНрдЬрд┐рдпрд╛рдВ рдФрд░ рд╕рд╛рдмреБрдд рдЕрдирд╛рдЬ рдЦрд╛рдПрдВ ЁЯеЧ",
        "тАв рддрд▓реЗ рд╣реБрдП рдФрд░ рдЬрдВрдХ рдлреВрдб рд╕реЗ рдмрдЪреЗрдВ ЁЯНЯ",
        "тАв рдкреНрд░рддрд┐рджрд┐рди рдХрдо рд╕реЗ рдХрдо 30 рдорд┐рдирдЯ рд╡реНрдпрд╛рдпрд╛рдо рдХрд░реЗрдВ ЁЯПГтАНтЩВя╕ПЁЯТГ",
        "тАв рдзреВрдореНрд░рдкрд╛рди рдЫреЛрдбрд╝реЗрдВ ЁЯЪн рдФрд░ рд╢рд░рд╛рдм рд╕реАрдорд┐рдд рдХрд░реЗрдВ ЁЯН╖",
        "тАв рдпреЛрдЧ, рдзреНрдпрд╛рди, рдпрд╛ рд╢реМрдХ рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рддрдирд╛рд╡ рдХрд╛ рдкреНрд░рдмрдВрдзрди рдХрд░реЗрдВ ЁЯзШтАНтЩВя╕ПЁЯОи",
      ],
    },
    medications: {
      title: "рджрд╡рд╛рдПрдВ",
      items: [
        "тАв рд░рдХреНрдд рдХреЛ рдкрддрд▓рд╛ рдХрд░рдиреЗ рд╡рд╛рд▓реА рджрд╡рд╛рдПрдВ рдердХреНрдХреЗ рдХреЛ рд░реЛрдХрдиреЗ рдХреЗ рд▓рд┐рдПред",
        "тАв рдХреЛрд▓реЗрд╕реНрдЯреНрд░реЙрд▓ рдХрдо рдХрд░рдиреЗ рд╡рд╛рд▓реА рджрд╡рд╛рдПрдВ рдкреНрд▓рд╛рдХ рдирд┐рд░реНрдорд╛рдг рдХреЛ рдХрдо рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдПред",
        "тАв рд░рдХреНрддрдЪрд╛рдк рдХреА рджрд╡рд╛рдПрдВ рд╣реГрджрдп рдХреЗ рдХрд╛рд░реНрдпрднрд╛рд░ рдХреЛ рдХрдо рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдПред",
        "тАв рдирд╛рдЗрдЯреНрд░реЗрдЯреНрд╕ рдЫрд╛рддреА рдХреЗ рджрд░реНрдж рдХреЛ рд░рд╛рд╣рдд рджреЗрдиреЗ рдХреЗ рд▓рд┐рдПред",
      ],
    },
    procedures: {
      title: "рдЪрд┐рдХрд┐рддреНрд╕рд╛ рдкреНрд░рдХреНрд░рд┐рдпрд╛рдПрдВ (рдпрджрд┐ рдЖрд╡рд╢реНрдпрдХ рд╣реЛ)",
      items: [
        "тАв рдПрдВрдЬрд┐рдпреЛрдкреНрд▓рд╛рд╕реНрдЯреА рдФрд░ рд╕реНрдЯреЗрдВрдЯ - рдЕрд╡рд░реБрджреНрдз рдзрдордирд┐рдпреЛрдВ рдХреЛ рдЦреЛрд▓рддрд╛ рд╣реИред",
        "тАв рдмрд╛рдИрдкрд╛рд╕ рд╕рд░реНрдЬрд░реА - рдЕрд╡рд░реБрджреНрдз рдзрдордирд┐рдпреЛрдВ рдХреЗ рдЪрд╛рд░реЛрдВ рдУрд░ рд░рдХреНрдд рдкреНрд░рд╡рд╛рд╣ рдХреЗ рд▓рд┐рдП рдПрдХ рдирдпрд╛ рдорд╛рд░реНрдЧ рдмрдирд╛рддрд╛ рд╣реИред",
      ],
    },
  },
  emergencyAlert:
    "рдпрджрд┐ рдЖрдкрдХреЛ рдЫрд╛рддреА рдореЗрдВ рджрд░реНрдж рдпрд╛ рдЕрдиреНрдп рд▓рдХреНрд╖рдг рд╣реИрдВ, рддреЛ рддреБрд░рдВрдд рдбреЙрдХреНрдЯрд░ рд╕реЗ рдорд┐рд▓реЗрдВред рд╢реАрдШреНрд░ рдкрддрд╛ рд▓рдЧрд╛рдиреЗ рд╕реЗ рдЬреАрд╡рди рдмрдЪрддрд╛ рд╣реИ! тЭдя╕П",
  translateButton: "Translate to English",
};

const HomePage: React.FC = () => {
  const [expandedSection, setExpandedSection] = useState("about");
  const [isHindi, setIsHindi] = useState(false);

  const toggleSection = (section) => {
    if (expandedSection === section) {
      setExpandedSection(null);
    } else {
      setExpandedSection(section);
    }
  };

  const toggleLanguage = () => {
    setIsHindi(!isHindi);
  };

  // Select the appropriate text based on current language
  const text = isHindi ? hindiText : englishText;

  return (
    <SafeAreaView style={styles.safeArea}>
      <ScrollView
        contentContainerStyle={styles.scrollContainer}
        showsVerticalScrollIndicator={false}
      >
        {/* Language Toggle Button */}
        <View style={styles.header}>
          <View style={styles.headerTop}>
            <Text style={styles.headerTitle}>Mediac</Text>
            <TouchableOpacity
              style={styles.languageToggle}
              onPress={toggleLanguage}
            >
              <Text style={styles.languageToggleText}>
                {isHindi ? "EN" : "рд╣рд┐рдВрджреА"}
              </Text>
            </TouchableOpacity>
          </View>
        </View>

        {/* Banner */}
        <View style={styles.banner}>
          <Image
            source={{ uri: "https://mediac.in/images/mediac.png" }}
            style={styles.bannerLogo}
          />
          <View style={styles.bannerTextContainer}>
            <Text style={styles.bannerTagline}>{text.bannerTagline}</Text>
          </View>
        </View>

        {/* Image Gallery */}
        <View style={styles.imageGallery}>
          <Image
            source={{ uri: "https://mediac.in/images/health1.jpg" }}
            style={styles.galleryImage}
          />
          <Image
            source={{ uri: "https://mediac.in/images/health2.jpg" }}
            style={styles.galleryImage}
          />
          <Image
            source={{ uri: "https://mediac.in/images/health3.jpg" }}
            style={styles.galleryImage}
          />
        </View>

        {/* Accordion Sections */}
        <View style={styles.accordionContainer}>
          {/* About CAD Section */}
          <TouchableOpacity
            style={[
              styles.accordionHeader,
              expandedSection === "about" && styles.accordionHeaderActive,
            ]}
            onPress={() => toggleSection("about")}
          >
            <View style={styles.accordionTitleContainer}>
              <Heart
                color={expandedSection === "about" ? "#fff" : "#6366f1"}
                size={20}
              />
              <Text
                style={[
                  styles.accordionTitle,
                  expandedSection === "about" && styles.accordionTitleActive,
                ]}
              >
                {text.aboutTitle}
              </Text>
            </View>
            {expandedSection === "about" ? (
              <ChevronUp color="#fff" size={20} />
            ) : (
              <ChevronDown color="#6366f1" size={20} />
            )}
          </TouchableOpacity>

          {expandedSection === "about" && (
            <View style={styles.accordionContent}>
              <Text style={styles.description}>{text.aboutContent}</Text>
            </View>
          )}

          {/* Causes Section */}
          <TouchableOpacity
            style={[
              styles.accordionHeader,
              expandedSection === "causes" && styles.accordionHeaderActive,
            ]}
            onPress={() => toggleSection("causes")}
          >
            <View style={styles.accordionTitleContainer}>
              <AlertTriangle
                color={expandedSection === "causes" ? "#fff" : "#f59e0b"}
                size={20}
              />
              <Text
                style={[
                  styles.accordionTitle,
                  expandedSection === "causes" && styles.accordionTitleActive,
                ]}
              >
                {text.causesTitle}
              </Text>
            </View>
            {expandedSection === "causes" ? (
              <ChevronUp color="#fff" size={20} />
            ) : (
              <ChevronDown color="#f59e0b" size={20} />
            )}
          </TouchableOpacity>

          {expandedSection === "causes" && (
            <View style={styles.accordionContent}>
              <View style={styles.causeItem}>
                <Text style={styles.causeIcon}>тЪая╕П</Text>
                <View style={styles.causeTextContainer}>
                  <Text style={styles.causeName}>
                    {text.causes.unhealthyDiet.name}
                  </Text>
                  <Text style={styles.causeDescription}>
                    {text.causes.unhealthyDiet.description}
                  </Text>
                </View>
              </View>

              <View style={styles.causeItem}>
                <Text style={styles.causeIcon}>ЁЯЪм</Text>
                <View style={styles.causeTextContainer}>
                  <Text style={styles.causeName}>
                    {text.causes.smoking.name}
                  </Text>
                  <Text style={styles.causeDescription}>
                    {text.causes.smoking.description}
                  </Text>
                </View>
              </View>

              <View style={styles.causeItem}>
                <Activity color="#3b82f6" size={20} />
                <View style={styles.causeTextContainer}>
                  <Text style={styles.causeName}>
                    {text.causes.lackOfExercise.name}
                  </Text>
                  <Text style={styles.causeDescription}>
                    {text.causes.lackOfExercise.description}
                  </Text>
                </View>
              </View>

              <View style={styles.causeItem}>
                <Heart color="#ef4444" size={20} />
                <View style={styles.causeTextContainer}>
                  <Text style={styles.causeName}>
                    {text.causes.highBloodPressure.name}
                  </Text>
                  <Text style={styles.causeDescription}>
                    {text.causes.highBloodPressure.description}
                  </Text>
                </View>
              </View>

              <View style={styles.causeItem}>
                <Text style={styles.causeIcon}>ЁЯзИ</Text>
                <View style={styles.causeTextContainer}>
                  <Text style={styles.causeName}>
                    {text.causes.highCholesterol.name}
                  </Text>
                  <Text style={styles.causeDescription}>
                    {text.causes.highCholesterol.description}
                  </Text>
                </View>
              </View>

              <View style={styles.causeItem}>
                <Wind color="#8b5cf6" size={20} />
                <View style={styles.causeTextContainer}>
                  <Text style={styles.causeName}>
                    {text.causes.stress.name}
                  </Text>
                  <Text style={styles.causeDescription}>
                    {text.causes.stress.description}
                  </Text>
                </View>
              </View>

              <View style={styles.causeItem}>
                <Stethoscope color="#10b981" size={20} />
                <View style={styles.causeTextContainer}>
                  <Text style={styles.causeName}>
                    {text.causes.familyHistory.name}
                  </Text>
                  <Text style={styles.causeDescription}>
                    {text.causes.familyHistory.description}
                  </Text>
                </View>
              </View>
            </View>
          )}

          {/* Symptoms Section */}
          <TouchableOpacity
            style={[
              styles.accordionHeader,
              expandedSection === "symptoms" && styles.accordionHeaderActive,
            ]}
            onPress={() => toggleSection("symptoms")}
          >
            <View style={styles.accordionTitleContainer}>
              <AlertTriangle
                color={expandedSection === "symptoms" ? "#fff" : "#ef4444"}
                size={20}
              />
              <Text
                style={[
                  styles.accordionTitle,
                  expandedSection === "symptoms" && styles.accordionTitleActive,
                ]}
              >
                {text.symptomsTitle}
              </Text>
            </View>
            {expandedSection === "symptoms" ? (
              <ChevronUp color="#fff" size={20} />
            ) : (
              <ChevronDown color="#ef4444" size={20} />
            )}
          </TouchableOpacity>

          {expandedSection === "symptoms" && (
            <View style={styles.accordionContent}>
              <View style={styles.symptomItem}>
                <Heart color="#ef4444" size={20} />
                <View style={styles.symptomTextContainer}>
                  <Text style={styles.symptomName}>
                    {text.symptoms.chestPain.name}
                  </Text>
                  <Text style={styles.symptomDescription}>
                    {text.symptoms.chestPain.description}
                  </Text>
                </View>
              </View>

              <View style={styles.symptomItem}>
                <Wind color="#3b82f6" size={20} />
                <View style={styles.symptomTextContainer}>
                  <Text style={styles.symptomName}>
                    {text.symptoms.shortnessOfBreath.name}
                  </Text>
                  <Text style={styles.symptomDescription}>
                    {text.symptoms.shortnessOfBreath.description}
                  </Text>
                </View>
              </View>

              <View style={styles.symptomItem}>
                <Text style={styles.symptomIcon}>тЪая╕П</Text>
                <View style={styles.symptomTextContainer}>
                  <Text style={styles.symptomName}>
                    {text.symptoms.heartAttackSigns.name}
                  </Text>
                  <Text style={styles.symptomDescription}>
                    {text.symptoms.heartAttackSigns.description}
                  </Text>
                </View>
              </View>
            </View>
          )}

          {/* Diagnosis Section */}
          <TouchableOpacity
            style={[
              styles.accordionHeader,
              expandedSection === "diagnosis" && styles.accordionHeaderActive,
            ]}
            onPress={() => toggleSection("diagnosis")}
          >
            <View style={styles.accordionTitleContainer}>
              <TestTube
                color={expandedSection === "diagnosis" ? "#fff" : "#8b5cf6"}
                size={20}
              />
              <Text
                style={[
                  styles.accordionTitle,
                  expandedSection === "diagnosis" &&
                    styles.accordionTitleActive,
                ]}
              >
                {text.diagnosisTitle}
              </Text>
            </View>
            {expandedSection === "diagnosis" ? (
              <ChevronUp color="#fff" size={20} />
            ) : (
              <ChevronDown color="#8b5cf6" size={20} />
            )}
          </TouchableOpacity>

          {expandedSection === "diagnosis" && (
            <View style={styles.accordionContent}>
              <View style={styles.diagnosisItem}>
                <Stethoscope color="#3b82f6" size={20} />
                <View style={styles.diagnosisTextContainer}>
                  <Text style={styles.diagnosisName}>
                    {text.diagnosis.ecg.name}
                  </Text>
                  <Text style={styles.diagnosisDescription}>
                    {text.diagnosis.ecg.description}
                  </Text>
                </View>
              </View>

              <View style={styles.diagnosisItem}>
                <TestTube color="#ef4444" size={20} />
                <View style={styles.diagnosisTextContainer}>
                  <Text style={styles.diagnosisName}>
                    {text.diagnosis.bloodTests.name}
                  </Text>
                  <Text style={styles.diagnosisDescription}>
                    {text.diagnosis.bloodTests.description}
                  </Text>
                </View>
              </View>

              <View style={styles.diagnosisItem}>
                <Activity color="#8b5cf6" size={20} />
                <View style={styles.diagnosisTextContainer}>
                  <Text style={styles.diagnosisName}>
                    {text.diagnosis.stressTest.name}
                  </Text>
                  <Text style={styles.diagnosisDescription}>
                    {text.diagnosis.stressTest.description}
                  </Text>
                </View>
              </View>

              <View style={styles.diagnosisItem}>
                <ShieldCheck color="#f59e0b" size={20} />
                <View style={styles.diagnosisTextContainer}>
                  <Text style={styles.diagnosisName}>
                    {text.diagnosis.angiography.name}
                  </Text>
                  <Text style={styles.diagnosisDescription}>
                    {text.diagnosis.angiography.description}
                  </Text>
                </View>
              </View>
            </View>
          )}

          {/* Treatment Section */}
          <TouchableOpacity
            style={[
              styles.accordionHeader,
              expandedSection === "treatment" && styles.accordionHeaderActive,
            ]}
            onPress={() => toggleSection("treatment")}
          >
            <View style={styles.accordionTitleContainer}>
              <Heart
                color={expandedSection === "treatment" ? "#fff" : "#10b981"}
                size={20}
              />
              <Text
                style={[
                  styles.accordionTitle,
                  expandedSection === "treatment" &&
                    styles.accordionTitleActive,
                ]}
              >
                {text.treatmentTitle}
              </Text>
            </View>
            {expandedSection === "treatment" ? (
              <ChevronUp color="#fff" size={20} />
            ) : (
              <ChevronDown color="#10b981" size={20} />
            )}
          </TouchableOpacity>

          {expandedSection === "treatment" && (
            <View style={styles.accordionContent}>
              <View style={styles.treatmentSection}>
                <View style={styles.treatmentHeader}>
                  <Text style={styles.treatmentType}>
                    {text.treatment.lifestyleChanges.title}
                  </Text>
                </View>
                <View style={styles.treatmentContent}>
                  {text.treatment.lifestyleChanges.items.map((item, index) => (
                    <Text key={index} style={styles.treatmentItem}>
                      {item}
                    </Text>
                  ))}
                </View>
              </View>

              <View style={styles.treatmentSection}>
                <View style={styles.treatmentHeader}>
                  <Text style={styles.treatmentType}>
                    {text.treatment.medications.title}
                  </Text>
                </View>
                <View style={styles.treatmentContent}>
                  {text.treatment.medications.items.map((item, index) => (
                    <Text key={index} style={styles.treatmentItem}>
                      {item}
                    </Text>
                  ))}
                </View>
              </View>

              <View style={styles.treatmentSection}>
                <View style={styles.treatmentHeader}>
                  <Text style={styles.treatmentType}>
                    {text.treatment.procedures.title}
                  </Text>
                </View>
                <View style={styles.treatmentContent}>
                  {text.treatment.procedures.items.map((item, index) => (
                    <Text key={index} style={styles.treatmentItem}>
                      {item}
                    </Text>
                  ))}
                </View>
              </View>
            </View>
          )}
        </View>

        {/* Emergency Alert */}
        <View style={styles.emergencyAlert}>
          <AlertTriangle color="#fff" size={24} style={styles.alertIcon} />
          <Text style={styles.alertText}>{text.emergencyAlert}</Text>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  safeArea: {
    flex: 1,
    backgroundColor: "#f9fafb",
  },
  header: {
    backgroundColor: "#4f46e5",
    paddingHorizontal: 16,
    paddingVertical: 12,
  },
  headerTop: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
  },
  headerTitle: {
    fontSize: 28,
    fontWeight: "bold",
    color: "#fff",
  },
  languageToggle: {
    backgroundColor: "#fff",
    paddingHorizontal: 12,
    paddingVertical: 6,
    borderRadius: 20,
  },
  languageToggleText: {
    color: "#4f46e5",
    fontWeight: "600",
    fontSize: 14,
  },
  scrollContainer: {
    flexGrow: 1,
    paddingBottom: 24,
  },
  banner: {
    backgroundColor: "#4f46e5",
    padding: 20,
    paddingTop: 0,
    flexDirection: "row",
    alignItems: "center",
  },
  bannerLogo: {
    width: 60,
    height: 60,
    borderRadius: 30,
    backgroundColor: "#fff",
  },
  bannerTextContainer: {
    marginLeft: 16,
    flex: 1,
  },
  bannerTitle: {
    fontSize: 28,
    fontWeight: "bold",
    color: "#fff",
  },
  bannerTagline: {
    fontSize: 14,
    color: "#e0e7ff",
    marginTop: 4,
  },
  imageGallery: {
    flexDirection: "row",
    padding: 16,
    justifyContent: "space-between",
    backgroundColor: "#fff",
  },
  galleryImage: {
    width: width * 0.28,
    height: width * 0.28,
    borderRadius: 12,
  },
  accordionContainer: {
    padding: 16,
  },
  accordionHeader: {
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "space-between",
    backgroundColor: "#fff",
    padding: 16,
    borderRadius: 12,
    marginBottom: 8,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.05,
    shadowRadius: 2,
    elevation: 1,
  },
  accordionHeaderActive: {
    backgroundColor: "#6366f1",
  },
  accordionTitleContainer: {
    flexDirection: "row",
    alignItems: "center",
  },
  accordionTitle: {
    fontSize: 14,
    fontWeight: "bold",
    marginLeft: 12,
    color: "#1f2937",
  },
  accordionTitleActive: {
    color: "#fff",
  },
  accordionContent: {
    backgroundColor: "#fff",
    padding: 16,
    borderRadius: 12,
    marginTop: -4,
    marginBottom: 16,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.05,
    shadowRadius: 2,
    elevation: 1,
  },
  description: {
    fontSize: 16,
    lineHeight: 24,
    color: "#4b5563",
  },
  causeItem: {
    flexDirection: "row",
    alignItems: "center",
    marginBottom: 12,
  },
  causeIcon: {
    fontSize: 20,
    width: 24,
    textAlign: "center",
  },
  causeTextContainer: {
    marginLeft: 12,
    flex: 1,
  },
  causeName: {
    fontSize: 16,
    fontWeight: "600",
    color: "#1f2937",
  },
  causeDescription: {
    fontSize: 14,
    color: "#6b7280",
  },
  symptomItem: {
    flexDirection: "row",
    alignItems: "flex-start",
    marginBottom: 16,
  },
  symptomIcon: {
    fontSize: 20,
    width: 24,
    textAlign: "center",
  },
  symptomTextContainer: {
    marginLeft: 12,
    flex: 1,
  },
  symptomName: {
    fontSize: 16,
    fontWeight: "600",
    color: "#1f2937",
  },
  symptomDescription: {
    fontSize: 14,
    color: "#6b7280",
    lineHeight: 20,
  },
  diagnosisItem: {
    flexDirection: "row",
    alignItems: "center",
    marginBottom: 12,
  },
  diagnosisTextContainer: {
    marginLeft: 12,
    flex: 1,
  },
  diagnosisName: {
    fontSize: 16,
    fontWeight: "600",
    color: "#1f2937",
  },
  diagnosisDescription: {
    fontSize: 14,
    color: "#6b7280",
  },
  treatmentSection: {
    marginBottom: 16,
    borderWidth: 1,
    borderColor: "#e5e7eb",
    borderRadius: 8,
    overflow: "hidden",
  },
  treatmentHeader: {
    backgroundColor: "#f3f4f6",
    padding: 12,
  },
  treatmentType: {
    fontSize: 14,
    fontWeight: "bold",
    color: "#374151",
  },
  treatmentContent: {
    padding: 12,
  },
  treatmentItem: {
    fontSize: 14,
    color: "#4b5563",
    marginBottom: 8,
    lineHeight: 20,
  },
  emergencyAlert: {
    backgroundColor: "#ef4444",
    margin: 16,
    padding: 16,
    borderRadius: 12,
    flexDirection: "row",
    alignItems: "center",
  },
  alertIcon: {
    marginRight: 12,
  },
  alertText: {
    color: "#fff",
    fontSize: 15,
    flex: 1,
    lineHeight: 22,
  },
});

export default HomePage;
